<%- include('../partials/admin/header.ejs') %>


    <div class="container py-4">
        <!-- Header -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="mb-0">Coupon Management</h2>
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCouponModal">
                <i class="fas fa-plus me-2"></i>Add New Coupon
            </button>
        </div>

        <!-- Coupon Table -->
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>Discount Type</th>
                                <th>Discount Value</th>
                                <th>Min. Price</th>
                                <th>Usage Limit</th>
                                <th>Times Used</th>
                                <th>Created On</th>
                                <th>Expiry On</th>
                                <th>Status</th>
                                <th>Listed</th>
                                <th>Update</th>
                                <th>Remove</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% coupons.forEach(coupon=> {%>
                                <tr>
                                    <td>
                                        <%= coupon.code %>
                                    </td>
                                    <td>
                                        <%= coupon.discountType %>
                                    </td>
                                    <td>
                                        <%= coupon.discountValue %>
                                    </td>
                                    <td>
                                        <%= coupon.minimumPrice %>
                                    </td>
                                    <td>
                                        <%= coupon.usageLimit %>
                                    </td>
                                    <td>
                                        <%= coupon.timesUsed %>
                                    </td>
                                    <td>
                                        <%= coupon.createdOn %>
                                    </td>
                                    <td>
                                        <%= coupon.expiryOn %>
                                    </td>

                                    <td><span
                                            class="badge <%= new Date(coupon.expiryOn)>new Date() ? 'bg-success':'bg-danger' %>">
                                            <%= new Date(coupon.expiryOn)>new Date()? 'Active':'Expired' %>
                                        </span></td>
                                    <td><i
                                            class="fas <%= coupon.isList ? 'fa-check text-success':'fa-check text-danger' %>  "></i>
                                    </td>
                                    <td>
                                        <button class="btn btn-sm btn-warning btn-update-coupon" data-bs-toggle="modal"
                                            data-bs-target="#updateCouponModal" data-coupon-id="<%= coupon._id %>"
                                            data-coupon-details='<%= JSON.stringify(coupon) %>'>
                                            <i class="fas fa-edit"></i>
                                        </button>
                                    </td>
                                    <td>

                                        <button class="btn btn-sm btn-danger btn-delete-coupon"
                                            data-coupon-id="<%= coupon._id %>">
                                            <i class="fas fa-trash"></i>
                                        </button>


                                    </td>
                                </tr>
                                <% }) %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Add Coupon Modal -->
        <div class="modal fade" id="addCouponModal" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Add New Coupon</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="couponForm" novalidate>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Coupon Code*</label>
                                    <input type="text" class="form-control" name="code" required pattern="^\S+$"
                                        title="Code cannot contain spaces" />
                                    <div class="form-text">Must be unique and without spaces</div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Expiry Date*</label>
                                    <input type="datetime-local" class="form-control" name="expiryOn" required />
                                    <div class="invalid-feedback">
                                        Expiry date must be in the future
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4 mb-3">
                                    <label class="form-label">Discount Type*</label>
                                    <select class="form-select" name="discountType" required>
                                        <option value="">Select type</option>
                                        <option value="percentage">Percentage</option>
                                        <option value="flat">Flat</option>
                                    </select>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label class="form-label">Discount Value*</label>
                                    <input type="number" class="form-control" name="discountValue" required min="0"
                                        step="0.01" />
                                    <div class="invalid-feedback">
                                        Must be a non-negative value
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label class="form-label">Minimum Price</label>
                                    <input type="number" class="form-control" name="minimumPrice" min="0" step="0.01" />
                                    <div class="invalid-feedback">Cannot be negative</div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Usage Limit*</label>
                                    <input type="number" class="form-control" name="usageLimit" required min="1"
                                        value="1" />
                                    <div class="invalid-feedback">Must be at least 1</div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <div class="form-check form-switch mt-4">
                                        <input class="form-check-input" type="checkbox" name="isList" checked />
                                        <label class="form-check-label">List Coupon</label>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            Cancel
                        </button>
                        <button type="submit" form="couponForm" class="btn btn-primary">
                            Create Coupon
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <!-- update modal -->
        <div class="modal fade" id="updateCouponModal" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Update Coupon</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="updateCouponForm" novalidate>
                            <input type="hidden" name="couponId" id="updateCouponId" />
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Coupon Code*</label>
                                    <input type="text" class="form-control" name="code" id="updateCode" required
                                        pattern="^\S+$" title="Code cannot contain spaces" />
                                    <div class="form-text">Must be unique and without spaces</div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Expiry Date*</label>
                                    <input type="datetime-local" class="form-control" name="expiryOn"
                                        id="updateExpiryOn" required />
                                    <div class="invalid-feedback">
                                        Expiry date must be in the future
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4 mb-3">
                                    <label class="form-label">Discount Type*</label>
                                    <select class="form-select" name="discountType" id="updateDiscountType" required>
                                        <option value="">Select type</option>
                                        <option value="percentage">Percentage</option>
                                        <option value="flat">Flat</option>
                                    </select>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label class="form-label">Discount Value*</label>
                                    <input type="number" class="form-control" name="discountValue"
                                        id="updateDiscountValue" required min="0" step="0.01" />
                                    <div class="invalid-feedback">
                                        Must be a non-negative value
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label class="form-label">Minimum Price</label>
                                    <input type="number" class="form-control" name="minimumPrice"
                                        id="updateMinimumPrice" min="0" step="0.01" />
                                    <div class="invalid-feedback">Cannot be negative</div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Usage Limit*</label>
                                    <input type="number" class="form-control" name="usageLimit" id="updateUsageLimit"
                                        required min="1" value="1" />
                                    <div class="invalid-feedback">Must be at least 1</div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <div class="form-check form-switch mt-4">
                                        <input class="form-check-input" type="checkbox" name="isList"
                                            id="updateIsList" />
                                        <label class="form-check-label">List Coupon</label>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            Cancel
                        </button>
                        <button type="submit" form="updateCouponForm" class="btn btn-primary">
                            Update Coupon
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="pagination-area mt-15 mb-50">
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    <!-- Previous Arrow -->
                    <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                        <a class="page-link" href="?page=<%= currentPage - 1 %>" tabindex="-1" aria-disabled="true">
                            &laquo;
                        </a>
                    </li>

                    <!-- Page Numbers -->
                    <% for (let i=1; i <=totalPages; i++) { %>
                        <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                            <a class="page-link" href="?page=<%= i %>">
                                <%= i %>
                            </a>
                        </li>
                        <% } %>

                            <!-- Next Arrow -->
                            <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                                <a class="page-link" href="?page=<%= currentPage + 1 %>">
                                    &raquo;
                                </a>
                            </li>
                </ul>
            </nav>
        </div>


        <!-- Delete Coupon Modal -->
        <div class="modal fade" id="deleteCouponModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Delete Coupon</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this coupon? This action cannot be undone.</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-danger" id="confirmDeleteCoupon">Delete</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Bootstrap JS -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
            // Global validation function
            function validateCouponForm(formDataJSON) {
                const errorMessages = [];
                let isValid = true;

                // Coupon Code Validation
                if (!formDataJSON.code.trim()) {
                    errorMessages.push("Coupon code is required");
                    isValid = false;
                }
                if (/\s/.test(formDataJSON.code)) {
                    errorMessages.push("Coupon code cannot contain spaces");
                    isValid = false;
                }

                // Expiry Date Validation
                const expiryDate = new Date(formDataJSON.expiryOn);
                if (expiryDate <= new Date()) {
                    errorMessages.push("Expiry date must be in the future");
                    isValid = false;
                }

                // Discount Type Validation
                if (!["percentage", "flat"].includes(formDataJSON.discountType)) {
                    errorMessages.push("Invalid discount type");
                    isValid = false;
                }

                // Discount Value Validation
                const discountValue = parseFloat(formDataJSON.discountValue);
                if (isNaN(discountValue) || discountValue < 0) {
                    errorMessages.push("Discount value must be non-negative");
                    isValid = false;
                }
                if (formDataJSON.discountType === "percentage" && discountValue > 100) {
                    errorMessages.push("Percentage discount cannot exceed 100%");
                    isValid = false;
                }

                // Minimum Price Validation
                const minimumPrice = parseFloat(formDataJSON.minimumPrice);
                if (formDataJSON.minimumPrice && (isNaN(minimumPrice) || minimumPrice < 0)) {
                    errorMessages.push("Minimum price cannot be negative");
                    isValid = false;
                }

                // Usage Limit Validation
                const usageLimit = parseInt(formDataJSON.usageLimit);
                if (isNaN(usageLimit) || usageLimit < 1) {
                    errorMessages.push("Usage limit must be at least 1");
                    isValid = false;
                }

                return {
                    isValid,
                    errorMessages
                };
            }

            // Shared function to show error alert
            async function showErrorAlert(errorMessages) {
                await Swal.fire({
                    icon: "error",
                    title: "Validation Errors",
                    html: errorMessages.join("<br>"),
                    confirmButtonText: "OK",
                    position: "center",
                    toast: true,
                });
            }

            // Coupon Creation Form Submission
            document.getElementById("couponForm").addEventListener("submit", async function (e) {
                e.preventDefault();

                const form = e.target;
                const formData = new FormData(form);
                const formDataJSON = {};
                formData.forEach((value, key) => {
                    formDataJSON[key] = key === "isList" ? form[key].checked : value;
                });

                const validationResult = validateCouponForm(formDataJSON);

                if (!validationResult.isValid) {
                    await showErrorAlert(validationResult.errorMessages);
                    return;
                }

                try {
                    const response = await fetch('/admin/coupon', {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify(formDataJSON),
                    });

                    const result = await response.json();

                    if (response.ok) {
                        await Swal.fire({
                            icon: "success",
                            title: "Coupon Created",
                            text: "The coupon was created successfully!",
                            timer: 2000,
                            showConfirmButton: true,
                            position: "center",
                            toast: true,
                        });
                        form.reset();
                        location.reload(); 
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Error",
                            text: result.message || "Something went wrong. Please try again.",
                            position: "center",
                            toast: true,
                        });
                    }
                } catch (error) {
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "Unable to create coupon. Please try again.",
                        position: "center",
                        toast: true,
                    });
                    console.error("Error:", error);
                }
            });


            document.querySelector('select[name="discountType"]').addEventListener("change", function () {
                const discountInput = document.querySelector('input[name="discountValue"]');
                if (this.value === "percentage") {
                    discountInput.setAttribute("max", "100");
                } else {
                    discountInput.removeAttribute("max");
                }
            });

            let selectedCouponId = null;

            document.querySelectorAll('.btn-delete-coupon').forEach((button) => {
                button.addEventListener('click', (event) => {
                    console.log('Button attributes:', event.target.attributes);

                    selectedCouponId = event.target.getAttribute('data-coupon-id');

                    console.log('Raw selectedCouponId:', selectedCouponId);

                    if (!selectedCouponId || selectedCouponId === 'null') {
                        console.error('Invalid coupon ID');
                        return;
                    }
                    

                    const deleteModal = new bootstrap.Modal(document.getElementById('deleteCouponModal'));
                    deleteModal.show();
                });
            });

            document.querySelector('#confirmDeleteCoupon').addEventListener('click', async () => {
                try {
                    const response = await fetch(`/admin/coupon/${selectedCouponId}`, {
                        method: 'DELETE',
                    });
                    console.log("response:", response);
                    if (response.ok) {
                        await Swal.fire({
                            icon: "success",
                            title: "Coupon Deleted",
                            text: "The coupon was deleted successfully!",
                            timer: 2000,
                            showConfirmButton: true,
                            position: "center",
                            toast: true,
                        });
                        window.location.reload();
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Error",
                            text: "Failed to delete the coupon. Please try again.",
                            position: "center",
                            toast: true,
                        });
                    }
                } catch (error) {
                    console.error("Error deleting coupon:", error);
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "An error occurred. Please try again later.",
                        position: "center",
                        toast: true,
                    });
                }
            });

            // Update Coupon - Populate Form
            document.querySelectorAll('.btn-update-coupon').forEach((button) => {
                button.addEventListener('click', (event) => {
                    selectedCouponId = event.target.getAttribute('data-coupon-id');
                    console.log('selectedCouponId:', selectedCouponId);
                    const coupon = JSON.parse(event.target.getAttribute('data-coupon-details'));

                    const form = document.querySelector('#updateCouponForm');
                    form.code.value = coupon.code;
                    form.discountType.value = coupon.couponType;
                    form.discountValue.value = coupon.discountValue;
                    form.minimumPrice.value = coupon.minimumPrice;
                    form.expiryOn.value = coupon.expiryOn;
                    form.usageLimit.value = coupon.usageLimit;
                    form.isList.checked = coupon.isList;
                });
            });

            // Update Coupon Form Submission
            document.querySelector('#updateCouponForm').addEventListener('submit', async (event) => {
                event.preventDefault();

                const form = event.target;
                const formData = new FormData(form);
                const formDataJSON = {};
                formData.forEach((value, key) => {
                    formDataJSON[key] = key === "isList" ? form[key].checked : value;
                });

                const validationResult = validateCouponForm(formDataJSON);

                if (!validationResult.isValid) {
                    await showErrorAlert(validationResult.errorMessages);
                    return;
                }

                try {

                    const response = await fetch(`/admin/coupon/${selectedCouponId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(formDataJSON),
                    });

                    if (response.ok) {
                        await Swal.fire({
                            icon: "success",
                            title: "Coupon Updated",
                            text: "The coupon was updated successfully!",
                            timer: 2000,
                            showConfirmButton: true,
                            position: "center",
                            toast: true,
                        });
                        location.reload();
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Error",
                            text: "Failed to update the coupon. Please try again.",
                            position: "center",
                            toast: true,
                        });
                    }
                } catch (error) {
                    console.error("Error updating coupon:", error);
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "An error occurred. Please try again later.",
                        position: "center",
                        toast: true,
                    });
                }
            });
        </script>


        <%- include('../partials/admin/footer.ejs') %>