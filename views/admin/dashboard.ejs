<%-include('../partials/admin/header.ejs') %>
<style>
    .card {
            border: none;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            margin-bottom: 20px;
            transition: all 0.3s ease;
        }
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0,0,0,0.15);
        }
        .icontext .icon {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            margin-right: 15px;
        }
        .card-header {
            background-color: #efa1ed;
            border-bottom: 1px solid #e9ecef;
        }
        .dashboard-header {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
        .chart-controls {
            display: flex;
            justify-content: space-between;
            margin-bottom: 15px;
        }
        .chart-controls select, 
        .chart-type-container {
            margin-right: 10px;
        }
        .new-member-list .avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            margin-right: 10px;
        }
        .verti-timeline .event-timeline-dot {
            position: relative;
            padding-left: 20px;
        }
</style>

    <section class="content-main">
      
            <div class="container-fluid px-4 py-4">
                <!-- Dashboard Header -->
                <div class="dashboard-header d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <h2 class="mb-2">Dashboard</h2>
                        <p class="text-muted mb-0">Overview of your business data</p>
                    </div>
                  
                </div>
        
                <!-- Statistics Section -->
                <div class="row">
                    <div class="col-md-3 col-sm-6">
                        <div class="card">
                            <div class="card-body d-flex align-items-center">
                                <div class="icontext bg-primary-subtle rounded-circle me-3 p-3">
                                    <i class="fas fa-rupee-sign text-primary"></i>
                                </div>
                                <div>
                                    <h6 class="card-title text-muted mb-1">Revenue</h6>
                                    <h4 class="mb-0">â‚¹<%= totalRevenue %></h4>
                                    <small class="text-muted">Shipping fees included</small>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-6">
                        <div class="card">
                            <div class="card-body d-flex align-items-center">
                                <div class="icontext bg-success-subtle rounded-circle me-3 p-3">
                                    <i class="fas fa-shipping-fast text-success"></i>
                                </div>
                                <div>
                                    <h6 class="card-title text-muted mb-1">Orders</h6>
                                    <h4 class="mb-0"><%= ordersCount %></h4>
                                    <small class="text-muted">Excluding orders in transit</small>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-6">
                        <div class="card">
                            <div class="card-body d-flex align-items-center">
                                <div class="icontext bg-warning-subtle rounded-circle me-3 p-3">
                                    <i class="fas fa-box text-warning"></i>
                                </div>
                                <div>
                                    <h6 class="card-title text-muted mb-1">Products</h6>
                                    <h4 class="mb-0"><%= productCount %></h4>
                                    <small class="text-muted">In <%= categoryCount %> categories</small>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-6">
                        <div class="card">
                            <div class="card-body d-flex align-items-center">
                                <div class="icontext bg-info-subtle rounded-circle me-3 p-3">
                                    <i class="fas fa-tags text-info"></i>
                                </div>
                                <div>
                                    <h6 class="card-title text-muted mb-1">Brands</h6>
                                    <h4 class="mb-0"><%= brandCount %></h4>
                                    <small class="text-muted">Total brands</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
        
                <!-- Charts and Activities -->
                <div class="row mt-4">
                    <div class="col-lg-8">
                        <div class="card shadow-sm">
                            <div class="card-header ">
                                <div class="row align-items-center">
                                    <div class="col-12 col-md-6 mb-2 mb-md-0">
                                        <h5 class="card-title mb-0">Top Performance</h5>
                                    </div>
                                    <div class="col-12 col-md-6">
                                        <div class="chart-controls d-flex flex-column flex-md-row gap-2 justify-content-end align-items-center">
                                            <select id="dataType" class="form-select form-select-sm w-auto">
                                                <option value="products">Top Products</option>
                                                <option value="categories">Top Categories</option>
                                                <option value="brands">Top Brands</option>
                                            </select>
                                            <select id="timeFilter" class="form-select form-select-sm w-auto">
                                                <option value="all">All Time</option>
                                                <option value="daily">Daily</option>
                                                <option value="weekly">Weekly</option>
                                                <option value="monthly">Monthly</option>
                                                <option value="quarterly">Quarterly</option>
                                                <option value="yearly">Yearly</option>
                                            </select>
                                            <div class="chart-type-container d-flex gap-2">
                                                <div class="btn-group btn-group-sm" role="group" aria-label="Chart Type">
                                                    <input type="radio" class="btn-check" name="chartType" id="barChart" value="bar" autocomplete="off" checked>
                                                    <label class="btn btn-outline-primary" for="barChart">Bar</label>
                        
                                                    <input type="radio" class="btn-check" name="chartType" id="lineChart" value="line" autocomplete="off">
                                                    <label class="btn btn-outline-primary" for="lineChart">Line</label>
                        
                                                    <input type="radio" class="btn-check" name="chartType" id="pieChart" value="pie" autocomplete="off">
                                                    <label class="btn btn-outline-primary" for="pieChart">Pie</label>
                        
                                                    <input type="radio" class="btn-check" name="chartType" id="doughnutChart" value="doughnut" autocomplete="off">
                                                    <label class="btn btn-outline-primary" for="doughnutChart">Doughnut</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card-body">
                                <canvas id="TopSalesChart" class="w-100"></canvas>
                            </div>
                        </div>
                        <div class="card">
                            <div class="card-header">
                                <div class="row align-items-center">
                                    <div class="col-md-6">
                                        <h5 class="card-title mb-0">Sales Statistics</h5>
                                    </div>
                                    <div class="col-md-6 d-flex justify-content-end">
                                        <div class="filters d-flex gap-2">
                                            <select id="salesTimeFilter" class="form-select form-select-sm w-auto">
                                                <option value="all">All Time</option>
                                                <option value="weekly">Weekly</option>
                                                <option value="monthly">Monthly</option>
                                                <option value="quarterly">Quarterly</option>
                                                <option value="yearly">Yearly</option>
                                            </select>
                                            <select id="salesStatusFilter" class="form-select form-select-sm w-auto">
                                                <option value="all">All Status</option>
                                                <option value="Shipped">Shipped</option>
                                                <option value="Delivered">Delivered</option>
                                                <option value="Cancelled">Cancelled</option>
                                                <option value="Partially Cancelled">Partially Cancelled</option>
                                                <option value="Returned">Returned</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card-body">
                                <canvas id="salesChart"></canvas>
                            </div>
                        </div>  
        
                        <!-- Recent Activities & Admins -->
                        <div class="row mt-4">
                            <div class="col-lg-5">
                                <div class="card">
                                    <div class="card-header">
                                        <h5 class="card-title">Admins</h5>
                                    </div>
                                    <div class="card-body">
                                        <div class="new-member-list">
                                            <div class="d-flex align-items-center justify-content-between mb-4">
                                                <% admins.forEach(admin=> {%>
                                                <div class="d-flex align-items-center">
                                                    <img src="/uploads/sample-images/software-engineer.png" alt="" class="avatar">
                                                    <div>
                                                        <h6><%= admin.name %></h6>
                                                        <p class="text-muted font-xs"><%= admin.email %></p>
                                                    </div>
                                                </div>
                                                <% }) %>
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-7">
                                <div class="card">
                                    <div class="card-header">
                                        <h5 class="card-title">Logistic Partners</h5>
                                    </div>
                                    <div class="card-body">
                                        <ul class="list-group list-group-flush">
                                          
                                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                                <div>
                                                    <h6 class="mb-1">OM logistics</h6>
                                                    <h6 class="mb-1">Sample logistcs</h6>
                                                    <h6 class="mb-1">LOGI logistcs</h6>
                                                    
                                                </div>
                                                <span class="badge  rounded-pill">
                                                   
                                                </span>
                                            </li>
                                         
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
        
                    <!-- Revenue by Area and Ledger -->
                    <div class="col-lg-4">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title">Payment Method</h5>
                            </div>
                            <div class="card-body">
                                <canvas id="revenueByAreaChart"></canvas>
                            </div>
                        </div>
                        
                     
                    </div>
                </div>
                <div class="modal fade" id="ledgerModal" tabindex="-1" aria-labelledby="ledgerModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="ledgerModalLabel">Ledger</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <h3 id="ledgerTitle" class="text-center mb-3"></h3>
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Date</th>
                                            <th>Description</th>
                                            <th>Debit (â‚¹)</th>
                                            <th>Credit (â‚¹)</th>
                                            <th>Balance (â‚¹)</th>
                                        </tr>
                                    </thead>
                                    <tbody id="ledgerBody">
                                        <!-- Dynamic ledger rows go here -->
                                    </tbody>
                                </table>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Best Selling Sections -->
                <div class="row mt-4">
                    <div class="col-lg-4 col-md-6">
                        <div class="card">
                            <div class="card-header" data-bs-toggle="collapse" data-bs-target="#collapseProducts" aria-expanded="false" style="cursor: pointer;">
                                <h5 class="card-title mb-0">Top Products</h5>
                            </div>
                            <div id="collapseProducts" class="collapse">
                                <div class="card-body">
                                    <ul class="list-group">
                                        <% topProducts.forEach((product, index) => { %>
                                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                                <%= product.productName %>
                                                <span class="badge <%= index === 0 ? 'bg-primary' : 'bg-secondary' %> rounded-pill">
                                                    <%= product.totalQuantityOrdered %>
                                                </span>
                                            </li>
                                        <% }) %>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-6">
                        <div class="card">
                            <div class="card-header" data-bs-toggle="collapse" data-bs-target="#collapseCategories" aria-expanded="false" style="cursor: pointer;">
                                <h5 class="card-title mb-0">Top Categories</h5>
                            </div>
                            <div id="collapseCategories" class="collapse">
                                <div class="card-body">
                                    <ul class="list-group">
                                        <% topCategories.forEach((category, index) => { %>
                                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                                <%= category.name %>
                                                <span class="badge <%= index === 0 ? 'bg-success' : 'bg-secondary' %> rounded-pill">
                                                    <%= category.totalQuantityOrdered %>
                                                </span>
                                            </li>
                                        <% }) %>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-6">
                        <div class="card">
                            <div class="card-header" data-bs-toggle="collapse" data-bs-target="#collapseBrands" aria-expanded="false" style="cursor: pointer;">
                                <h5 class="card-title mb-0">Top Brands</h5>
                            </div>
                            <div id="collapseBrands" class="collapse">
                                <div class="card-body">
                                    <ul class="list-group">
                                        <% topBrands.forEach((brand, index) => { %>
                                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                                <%= brand.brandName %>
                                                <span class="badge <%= index === 0 ? 'bg-warning' : 'bg-secondary' %> rounded-pill">
                                                    <%= brand.totalQuantityOrdered %>
                                                </span>
                                            </li>
                                        <% }) %>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        
         
    </section>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    async function loadChartData() {
        try {

            const response = await fetch('/admin/paymentData'); 
            const data = await response.json();

            const labels = data.map(item => item.method);
            const values = data.map(item => item.total);
            const total = data.map(item=>item.totalAmount);

            // Create the chart
             //  use 'bar' or 'doughnut' 'pie'
            const ctx = document.getElementById('revenueByAreaChart').getContext('2d');
            new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: data.map(item => item.method), 
                    datasets: [
                        {
                            data: data.map(item => item.total), 
                            backgroundColor: ['#36A2EB', '#FF6384', '#FFCE56'], 
                        }
                    ]
                },
                options: {
                    responsive: true,
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    const method = context.label; 
                                    const total = context.raw; 
                                    const totalAmount = data[context.dataIndex].totalAmount; 
                                    return `${method}: ${total} orders, â‚¹ ${totalAmount.toFixed(2)}`;
                                }
                            }
                        },
                        legend: {
                            position: 'top',
                        }
                    }
                }
            });

        } catch (error) {
            throw new Error(error);
            
        }
    }

    // Call the function to load and render the chart
    loadChartData();
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const ctx = document.getElementById('TopSalesChart').getContext('2d');
        let salesChart;

        // Function to create or update chart
        function createChart(data, label, chartType) {
            // Destroy existing chart if it exists
            if (salesChart) {
                salesChart.destroy();
            }

            // Define a vibrant color palette
            const vibrantColors = [
                '#FF5733', // Bright Red
                '#33FF57', // Bright Green
                '#3357FF', // Bright Blue
                '#FF33A1', // Hot Pink
                '#FFD700', // Gold
                '#40E0D0', // Turquoise
                '#800080', // Purple
                '#FFA500', // Orange
                '#FF6347', // Tomato
                '#ADFF2F', // Green Yellow
                '#00CED1', // Dark Turquoise
                '#8A2BE2', // Blue Violet
                '#FF69B4', // Hot Pink
                '#7FFF00', // Chartreuse
                '#1E90FF'  // Dodger Blue
            ];

            // Prepare chart configuration
            const chartConfig = {
                type: chartType,
                data: {
                    labels: data.map(item =>
                        item.name ||
                        item.productName ||
                        item.brandName ||
                        'Unknown'
                    ),
                    datasets: [{
                        label: label,
                        data: data.map(item => item.totalSales || 0),
                        backgroundColor: chartType === 'pie' || chartType === 'doughnut'
                            ? vibrantColors
                            : vibrantColors.slice(0, data.length), // Use only as many colors as needed
                        borderColor: chartType === 'bar' || chartType === 'line'
                            ? 'rgba(75, 192, 192, 1)'
                            : '#FFFFFF', // White border for pie/doughnut charts
                        borderWidth: chartType === 'bar' || chartType === 'line' ? 1 : 2,
                        fill: chartType === 'line'
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: chartType === 'bar' || chartType === 'line' ? {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Total Sales (â‚¹)'
                            }
                        } : undefined // Remove scales for pie/doughnut charts
                    },
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    const dataItem = data[context.dataIndex];
                                    return `Total Sales: â‚¹ ${context.parsed.y ? context.parsed.y.toFixed(2) : dataItem.totalSales.toFixed(2)}`;
                                }
                            }
                        },
                        legend: {
                            position: 'top',
                            labels: {
                                color: '#333', // Dark text for better contrast
                                font: {
                                    size: 14,
                                    family: 'Arial'
                                }
                            }
                        }
                    }
                }
            };

            // Create new chart
            salesChart = new Chart(ctx, chartConfig);
        }

        // Function to fetch data
        async function fetchChartData() {
            const dataType = document.getElementById('dataType').value;
            const timeFilter = document.getElementById('timeFilter').value;
            const chartType = document.querySelector('input[name="chartType"]:checked').value;

            try {
                const response = await fetch(`/admin/dashboardData?type=${dataType}&timeFilter=${timeFilter}`);
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const data = await response.json();

                // Determine label based on data type
                let label;
                switch (dataType) {
                    case 'products':
                        label = 'Top Products Sales';
                        break;
                    case 'categories':
                        label = 'Top Categories Sales';
                        break;
                    case 'brands':
                        label = 'Top Brands Sales';
                        break;
                }

                // Create chart
                createChart(data, label, chartType);
            } catch (error) {
                alert('Failed to load chart data');
            }
        }

        // Initial load
        fetchChartData();

        // Event listeners for controls
        document.getElementById('dataType').addEventListener('change', fetchChartData);
        document.getElementById('timeFilter').addEventListener('change', fetchChartData);

        // Add event listeners for chart type radio buttons
        document.querySelectorAll('input[name="chartType"]').forEach(radio => {
            radio.addEventListener('change', fetchChartData);
        });
    });
</script>

<script>
    const ctx = document.getElementById('salesChart').getContext('2d');
    let salesChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: [], 
            datasets: [{
                label: 'Sales',
                data: [],
                backgroundColor: 'rgba(84, 180, 211, 0.2)', // Modern, soft teal
                borderColor: 'rgba(41, 128, 185, 1)', // Deeper, rich blue
                borderWidth: 2,
                tension: 0.4, // Adds a slight curve to the line
                fill: true
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    labels: {
                        color: 'rgba(50, 50, 50, 0.8)' // Soft dark gray for better readability
                    }
                }
            },
            scales: {
                x: {
                    title: { 
                        display: true, 
                        text: 'Time',
                        color: 'rgba(70, 70, 70, 0.9)' // Dark gray title
                    },
                    grid: {
                        color: 'rgba(200, 200, 200, 0.2)' // Light grid lines
                    }
                },
                y: {
                    title: { 
                        display: true, 
                        text: 'Sales Count',
                        color: 'rgba(70, 70, 70, 0.9)' // Dark gray title
                    },
                    beginAtZero: true,
                    grid: {
                        color: 'rgba(200, 200, 200, 0.2)' // Light grid lines
                    }
                }
            }
        }
    });

    async function updateChart() {
        const timeFilter = document.getElementById('salesTimeFilter').value;
        const statusFilter = document.getElementById('salesStatusFilter').value;

        try {
            const response = await fetch(`/admin/ordersSales?time=${timeFilter}&status=${statusFilter}`);
            
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            
            const data = await response.json();

            salesChart.data.labels = data.labels;
            salesChart.data.datasets[0].data = data.salesCounts;
            salesChart.update();
        } catch (error) {
            Swal.fire({
                icon:"info",
                text:"Could not load sales data. Please try again later.",
                toast:true,
                position:"top-end",
                backgroundColor:"purple",
                color:"gold",
           })
        }
    }

    // Event listeners for filters
    document.getElementById('salesTimeFilter').addEventListener('change', updateChart);
    document.getElementById('salesStatusFilter').addEventListener('change', updateChart);

    // Initial chart load
    updateChart();
</script>


<script>
        document.addEventListener('DOMContentLoaded', function () {
    const ledgerTitle = document.getElementById('ledgerTitle');
    const ledgerBody = document.getElementById('ledgerBody');

    // Event listeners for buttons
    document.getElementById('generateMonthlyLedger').addEventListener('click', () => fetchLedger('monthly'));
    document.getElementById('generateQuarterlyReport').addEventListener('click', () => fetchLedger('quarterly'));
    document.getElementById('generateYearlyLedger').addEventListener('click', () => fetchLedger('yearly'));

    async function fetchLedger(type) {
        try {
            const response = await fetch(`/admin/ledgerGenerate?type=${type}`);
            if (!response.ok) throw new Error('Failed to fetch ledger');
            const data = await response.json();

            // Update ledger title
            ledgerTitle.textContent = `${type.charAt(0).toUpperCase() + type.slice(1)} Ledger`;

            // Populate ledger table
            ledgerBody.innerHTML = '';
            let balance = 0;

            data.forEach((entry) => {
                balance += entry.credit - entry.debit;
                ledgerBody.innerHTML += `
                    <tr>
                        <td>${entry.date}</td>
                        <td>${entry.description}</td>
                        <td>${entry.debit.toFixed(2)}</td>
                        <td>${entry.credit.toFixed(2)}</td>
                        <td>${balance.toFixed(2)}</td>
                    </tr>`;
            });
        } catch (error) {
            
            Swal.fire({
                icon:"info",
                text:"Could not generate the ledger. Please try again.",
                toast:true,
                position:"top-end",
                backgroundColor:"purple",
                color:"gold",
           })
        }
    }
});

</script>


    <%-include('../partials/admin/footer.ejs') %>